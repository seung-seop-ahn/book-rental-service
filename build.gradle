buildscript {
    ext {
        springBootVersion = '3.2.1'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:1.1.4')
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.example'
    version = '0.0.1'

    java {
        sourceCompatibility = '17'
        targetCompatibility = '17'
    }

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        //	implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        //	runtimeOnly 'com.h2database:h2'
        runtimeOnly 'com.mysql:mysql-connector-j'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        //	testImplementation 'org.springframework.security:spring-security-test'

        implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '8.0.1.Final'

        // swagger
        implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.3.0'

        testImplementation platform('org.junit:junit-bom:5.9.1')
        testImplementation 'org.junit.jupiter:junit-jupiter'
    }

    test {
        useJUnitPlatform()
    }

    afterEvaluate { project ->
        if(!project.name.startsWith('module-common')) {
            docker {
                println(tasks.bootJar.outputs.files)

                // image name
                name 'app-' + project.name + ':' + project.version

                // dockerfile
                dockerfile file('./dockerfile')

                // copy dockerized files
                files tasks.bootJar.outputs.files

                // set Dockerfile arguments
                buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
            }
        }
    }
}

project(':module-common') {
    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-aop:3.2.0'
    }
}

project(':module-members') {
    bootJar {
        enabled = true
    }

    jar {
        enabled = false
    }

    dependencies {
        implementation project(':module-common')
        implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: '6.2.1'
    }
}

project(':module-books') {
    bootJar {
        enabled = true
    }

    jar {
        enabled = false
    }

    dependencies {
        implementation project(':module-common')
    }
}

project(':module-bestbooks') {
    bootJar {
        enabled = true
    }

    jar {
        enabled = false
    }

    dependencies {
        implementation project(':module-common')
    }
}

project(':module-rental') {
    bootJar {
        enabled = true
    }

    jar {
        enabled = false
    }

    dependencies {
        implementation project(':module-common')
    }
}